name: PHP Continuous Integration

on:
  pull_request:
    branches: [ develop, trunk ]
  workflow_dispatch:

jobs:
  test:
    name: PHP ${{ matrix.php }} WP ${{ matrix.wp }}
    timeout-minutes: 15
    runs-on: ubuntu-latest
    env:
      WP_TESTS_DIR: /tmp/wordpress-tests-lib
    strategy:
      fail-fast: false
      matrix:
        php: [ '7.2', '7.4', '8.0' ]
        wp: [ 'latest' ]
    services:
      database:
        image: mysql:5.6
        env:
          MYSQL_ROOT_PASSWORD: wordpress
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        tools: composer
        extensions: mysql
        coverage: none

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache Composer packages
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Setup environment to use the desired version of NodeJS
      uses: actions/setup-node@v3

    - name: Installing NPM dependencies
      run: npm ci

    - name: Install WordPress and initialize database
      run: ./tests/bin/install-wp-tests.sh wp_notify_tests root wordpress 127.0.0.1 latest

    - name: Run PHP Unit tests
      run: composer run test

    - name: Starting the WordPress Environment
      run: npm run wp-env:start

    - name: Running the tests
      run: npm run test
